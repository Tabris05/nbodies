#version 460
#extension GL_EXT_mesh_shader : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_scalar_block_layout : require

#define LOCAL_GROUP_SIZE 32

struct Body {
	vec2 position;
	vec2 velocity;
    float mass;
}; 

layout(buffer_reference, scalar) buffer Bodies { 
	Body bodies[];
};

layout(push_constant, scalar) uniform constants {
    mat4 projMatrix;
	readonly Bodies inBodies;
    writeonly Bodies outBodies;
    float dt;
} pcs;

layout(local_size_x = LOCAL_GROUP_SIZE) in;
layout(points, max_vertices = LOCAL_GROUP_SIZE, max_primitives = LOCAL_GROUP_SIZE) out;

float pointSize(float mass) {
    return 9.5e-7f * mass + 4.9999905;   
}

void main() {
    Body body = pcs.inBodies.bodies[gl_GlobalInvocationID.x];

    vec2 acceleration = vec2(0.0f);
    for(uint i = 0; i < gl_NumWorkGroups.x * LOCAL_GROUP_SIZE; i++) {
        vec2 direction = pcs.inBodies.bodies[i].position - body.position;
        float magnitude = length(direction);
        acceleration += magnitude == 0.0f ? vec2(0.0f) : normalize(direction) / magnitude / magnitude * pcs.dt * pcs.inBodies.bodies[i].mass;
    }

    body.velocity += acceleration * pcs.dt;
    body.position += body.velocity * pcs.dt;

    pcs.outBodies.bodies[gl_GlobalInvocationID.x] = body;

    SetMeshOutputsEXT(LOCAL_GROUP_SIZE, LOCAL_GROUP_SIZE);

    gl_MeshVerticesEXT[gl_LocalInvocationID.x].gl_Position = pcs.projMatrix * vec4(body.position, 0.0f, 1.0f);
    gl_MeshVerticesEXT[gl_LocalInvocationID.x].gl_PointSize = pointSize(body.mass);

    gl_PrimitivePointIndicesEXT[gl_LocalInvocationID.x] = gl_LocalInvocationID.x;
}